View(prueba)
View(prueba_2)
prueba_2<-group_by(prueba, nam) %>%
head(10)
View(prueba_2)
View(callesNA)
View(callesNA)
View(CallesAmbaUrbCorr)
prueba_2<-sample(nrow(prueba_2),20)
prueba_2<-group_by(prueba, nam)
prueba_2<-sample(nrow(prueba_2),20)
library(tibble)
prueba_3 <- prueba_2[sample(1:nrow(prueba_2), 10),]
prueba_3 <- prueba_2[sample(nrow(prueba_2),10),]
prueba_3 <- prueba_2[sample(nrow(prueba_2),10),]
prueba_2<-group_by(prueba, nam)
prueba_3 <- prueba_2[sample(nrow(prueba_2),10),]
View(prueba_3)
filter(prueba, st_is(geometry, "POINT")) %>%
select(1:12)
prueba<- filter(prueba, st_is(geometry, "POINT")) %>%
select(1:12)
View(prueba)
View(prueba_2)
View(resumen_muni_urb)
View(Totales)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id) %>%
puntos<-puntos[sample(nrow(puntos),10),]
}
puntos_AlmiranteBrown<-seleccion_puntos(26)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id) %>%
puntos<-puntos[sample(nrow(puntos),10),]
}
puntos_AlmiranteBrown<-seleccion_puntos(26)
puntos<-filter(prueba, gid==mun_id)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id)
puntos<-puntos[sample(nrow(puntos),10),]
}
puntos_AlmiranteBrown<-seleccion_puntos(26)
puntos_AlmiranteBrown<-seleccion_puntos(12)
pts<-filter(prueba, gid==26)
pts<-pts[sample(nrow(pts),10),]
pts<-pts[sample(nrow(pts),10),]
View(prueba)
m <- leaflet() %>%
addTiles(map = ) %>%
# addGeoJSON(a)  # Add default OpenStreetMap map tiles
addPolygons(data=st_transform(a_25,4326))
m
puntos_AlmiranteBrown<-seleccion_puntos(439)
addMarkers(data=puntos_AlmiranteBrown)
m <- leaflet() %>%
addTiles(map = ) %>%
# addGeoJSON(a)  # Add default OpenStreetMap map tiles
addPolygons(data=st_transform(a_25,4326)) %>%
addMarkers(data=puntos_AlmiranteBrown)
m
m <- leaflet() %>%
addTiles(map = ) %>%
# addGeoJSON(a)  # Add default OpenStreetMap map tiles
addPolygons(data=st_transform(a_25,4326)) %>%
addMarkers(data=st_transform(puntos_AlmiranteBrown,4326))
m
View(resumen_muni_urb)
puntos_Avellaneda<-seleccion_puntos(97)
departamentos<-read_sf("../shapes/territorial/Departamentos_RMBA.shp")
gids<-as.data.frame(departamentos) %>%
select(gid)
map(gids, seleccion_puntos)
pts<-map(gids, seleccion_puntos)
View(pts)
gids<-as.data.frame(departamentos) %>%
select(gid) %>%
as.list()
pts<-map(gids, seleccion_puntos)
pts
View(gids)
gids<-as.data.frame(departamentos) %>%
select(gid)
pts<-map(gids$gid, seleccion_puntos)
View(gids)
pts<-gids %>%
map(seleccion_puntos) %>%
reduce(rbind)
View(pts)
pts<-as.list(gids) %>%
map(seleccion_puntos) %>%
reduce(rbind)
View(pts)
as.list(gids)
View(gids)
as.array(gids)
as.vetor(gids)
as.vetor($gids)
as.array($gids)
as.array(~gids)
as.array(gids$gid)
gid<-as.array(gids$gid)
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id)
if (length(puntos>10)){
puntos<-puntos[sample(nrow(puntos),10),]
}
}
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
seleccion_puntos(439)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id)
if (length(puntos)>10){
puntos<-puntos[sample(nrow(puntos),10),]
}
}
seleccion_puntos(439)
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
head(gid,5)
pts<-as.list(head(gid,5)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
View(pts)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id)
if (length(puntos)>10){
puntos<-puntos[sample(nrow(puntos),10),]
}else {
puntos
}
}
pts<-as.list(head(gid,5)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,10)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id)
if (length(puntos)>10){
puntos<-puntos[sample(nrow(puntos),10),]
}else {
head(puntos)
}
}
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,30)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,25)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,20)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,15)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,12)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(head(gid,13)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
length(puntos_AlmiranteBrown)
nrow(puntos_AlmiranteBrown)
if (nrow(puntos)>10){
puntos<-puntos[sample(nrow(puntos),10),]
}else {
head(puntos)
}
seleccion_puntos<- function(mun_id){
puntos<-filter(prueba, gid==mun_id)
if (nrow(puntos)>10){
puntos<-puntos[sample(nrow(puntos),10),]
}else {
head(puntos)
}
}
pts<-as.list(head(gid,13)) %>%
map(seleccion_puntos) %>%
reduce(rbind)
pts<-as.list(gid) %>%
map(seleccion_puntos) %>%
reduce(rbind)
View(pts)
write_sf(pts, "puntos_control.geojson")
View(resumen_muni_urb)
indicadores<-function(A){
resumen_muni<-as.data.frame(A) %>%
filter(cat>=2) %>%
group_by(nam) %>%
summarise(tot = sum(largo)/1000)
pav<-as.data.frame(A) %>%
filter(estado== "pavimentada") %>%
group_by(nam) %>%
summarise(pavimentada = sum(largo)/1000)
no_pav<-as.data.frame(A) %>%
filter(estado== "no_pavimentada") %>%
group_by(nam) %>%
summarise(no_pavimentada = sum(largo)/1000)
no_rel<-as.data.frame(A) %>%
filter(is.na(estado)) %>%
group_by(nam) %>%
summarise(no_relevada = sum(largo)/1000)
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100)
return(resumen_mun)
}
resumen_muni_urb<-indicadores(calles_AMBA_urb)
resumen_muni_urb<-indicadores(calles_AMBA_urb)
resumen_muni_urb[is.na(resumen_muni_urb)] <- 0
Totales<-summarise(resumen_muni_urb, total=sum(tot),tot_no_pavimentada=sum(no_pavimentada), tot_no_relevado=sum(no_relevada))
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100) %>%
mutate(No_Pav_Proy= no_pavimentada+ (no_rel)*porcentaje_no_pav, Pav_Proyectado =tot-No_Pav_Proy )
indicadores<-function(A){
resumen_muni<-as.data.frame(A) %>%
filter(cat>=2) %>%
group_by(nam) %>%
summarise(tot = sum(largo)/1000)
pav<-as.data.frame(A) %>%
filter(estado== "pavimentada") %>%
group_by(nam) %>%
summarise(pavimentada = sum(largo)/1000)
no_pav<-as.data.frame(A) %>%
filter(estado== "no_pavimentada") %>%
group_by(nam) %>%
summarise(no_pavimentada = sum(largo)/1000)
no_rel<-as.data.frame(A) %>%
filter(is.na(estado)) %>%
group_by(nam) %>%
summarise(no_relevada = sum(largo)/1000)
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100) %>%
mutate(No_Pav_Proy= no_pavimentada+ (no_rel)*porcentaje_no_pav, Pav_Proyectado =tot-No_Pav_Proy )
return(resumen_mun)
}
resumen_muni_urb<-indicadores(calles_AMBA_urb)
indicadores<-function(A){
resumen_muni<-as.data.frame(A) %>%
filter(cat>=2) %>%
group_by(nam) %>%
summarise(tot = sum(largo)/1000)
pav<-as.data.frame(A) %>%
filter(estado== "pavimentada") %>%
group_by(nam) %>%
summarise(pavimentada = sum(largo)/1000)
no_pav<-as.data.frame(A) %>%
filter(estado== "no_pavimentada") %>%
group_by(nam) %>%
summarise(no_pavimentada = sum(largo)/1000)
no_rel<-as.data.frame(A) %>%
filter(is.na(estado)) %>%
group_by(nam) %>%
summarise(no_relevada = sum(largo)/1000)
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100) %>%
mutate(No_Pav_Proy= no_pavimentada+ (no_rel)*as.numeric(porcentaje_no_pav)/100, Pav_Proyectado =tot-No_Pav_Proy )
return(resumen_mun)
}
resumen_muni_urb<-indicadores(calles_AMBA_urb)
View(resumen_muni_urb)
write_csv(resumen_muni, "resumen_muni.csv")
write_excel_csv(resumen_muni_urb, "resumen_muni.csv")
write_csv(resumen_muni_urb, "resumen_muni.csv")
write_csv2(resumen_muni_urb, "resumen_muni.csv")
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(tidyverse)
library(jsonlite)
library(geojsonio)
library(lubridate)
library(sf)
library(janitor)
library(measurements)
library(units)
fecha<-"2021-07-01"
# GPS <- read_rds(sprintf("%sagrupado.rds",ruta_archivo))
GPS<-read_rds("/Users/Tomas/Documents/api_transporte/2021-07-01/agrupado.rds")
GPS<-st_as_sf(GPS, coords = c("longitude", "latitude"), crs =4326 )
knitr::opts_chunk$set(echo = TRUE)
library(osmdata)
library(tidyverse)
library(ggrepel)
library(sf)
library(leaflet)
library(units)
library(ggplot2)
library(tibble)
library(ggthemes)
options(scipen = 10)
calles_AMBA_urb<-st_read("CallesAmbaUrb.geojson")
indicadores<-function(A){
resumen_muni<-as.data.frame(A) %>%
filter(cat>=2) %>%
group_by(nam) %>%
summarise(tot = sum(largo)/1000)
pav<-as.data.frame(A) %>%
filter(estado== "pavimentada") %>%
group_by(nam) %>%
summarise(pavimentada = sum(largo)/1000)
no_pav<-as.data.frame(A) %>%
filter(estado== "no_pavimentada") %>%
group_by(nam) %>%
summarise(no_pavimentada = sum(largo)/1000)
no_rel<-as.data.frame(A) %>%
filter(is.na(estado)) %>%
group_by(nam) %>%
summarise(no_relevada = sum(largo)/1000)
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100)
resumen_mun[is.na(resumen_mun)] <- 0
mutate(resumen_mun, No_Pav_Proy= no_pavimentada+ (no_relevada)*as.numeric(porcentaje_no_pav)/100, Pav_Proyectado =tot-No_Pav_Proy )
return(resumen_mun)
}
calles_AMBA_urb<-st_read("CallesAmbaUrb.geojson")
indicadores<-function(A){
resumen_muni<-as.data.frame(A) %>%
filter(cat>=2) %>%
group_by(nam) %>%
summarise(tot = sum(largo)/1000)
pav<-as.data.frame(A) %>%
filter(estado== "pavimentada") %>%
group_by(nam) %>%
summarise(pavimentada = sum(largo)/1000)
no_pav<-as.data.frame(A) %>%
filter(estado== "no_pavimentada") %>%
group_by(nam) %>%
summarise(no_pavimentada = sum(largo)/1000)
no_rel<-as.data.frame(A) %>%
filter(is.na(estado)) %>%
group_by(nam) %>%
summarise(no_relevada = sum(largo)/1000)
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100)
resumen_mun[is.na(resumen_mun)] <- 0
mutate(resumen_mun, No_Pav_Proy= no_pavimentada+ (no_relevada)*as.numeric(porcentaje_no_pav)/100, Pav_Proyectado =tot-No_Pav_Proy )
return(resumen_mun)
}
indicadores<-function(A){
resumen_muni<-as.data.frame(A) %>%
filter(cat>=2) %>%
group_by(nam) %>%
summarise(tot = sum(largo)/1000)
pav<-as.data.frame(A) %>%
filter(estado== "pavimentada") %>%
group_by(nam) %>%
summarise(pavimentada = sum(largo)/1000)
no_pav<-as.data.frame(A) %>%
filter(estado== "no_pavimentada") %>%
group_by(nam) %>%
summarise(no_pavimentada = sum(largo)/1000)
no_rel<-as.data.frame(A) %>%
filter(is.na(estado)) %>%
group_by(nam) %>%
summarise(no_relevada = sum(largo)/1000)
resumen_mun<-left_join(resumen_muni,pav) %>%
left_join(no_pav) %>%
left_join(no_rel) %>%
mutate(porcentaje_no_rel= as.numeric(no_relevada)/as.numeric(tot)*100,
porcentaje_no_pav= as.numeric(no_pavimentada)/as.numeric(tot)*100)
resumen_mun[is.na(resumen_mun)] <- 0
mutate(resumen_mun, No_Pav_Proy= no_pavimentada+ (no_relevada)*as.numeric(porcentaje_no_pav)/100, Pav_Proyectado =tot-No_Pav_Proy )
return(resumen_mun)
}
resumen_muni_urb<-indicadores(calles_AMBA_urb)
View(resumen_muni_urb)
mutate(resumen_muni_urb, No_Pav_Proy= no_pavimentada+ (no_relevada)* porcentaje_no_pav/100, Pav_Proyectado =tot-No_Pav_Proy )
resumen_muni_urb[is.na(resumen_muni_urb)] <- 0
View(resumen_muni_urb)
st_voronoi_point <- function(points){
## points must be POINT geometry
p = st_as_sf(points)
if(!all(st_geometry_type(points) == "POINT")){
stop("Input not  POINT geometries")
}
g = st_combine(st_geometry(points)) # make multipoint
v = st_voronoi(g,dTolerance = 50)
v = st_collection_extract(v)
return(v[unlist(st_intersects(p, v))])
}
puntos_control<-st_read("puntos_control.geojson")
voronoi_partido<-function(id_partido){
PuntosPartido<-filter(puntos_control, gid==id_partido)
p <-st_as_sf(PuntosPartido)
v <-st_voronoi_point(PuntosPartido)
pv<- st_set_geometry(p, v)
depto<-filter(departamentos, gid==id_partido) %>%
st_transform(st_crs(PuntosPartido))
st_intersection(pv, depto)
}
departamentos<-read_sf("../shapes/territorial/Departamentos_RMBA.shp")
gids<-as.data.frame(departamentos) %>%
select(gid)
voronis<-rbind(voronoi_partido(122),
voronoi_partido(11),
voronoi_partido(62),
voronoi_partido(445),
voronoi_partido(521),
voronoi_partido(453),
voronoi_partido(446),
voronoi_partido(351),
voronoi_partido(355),
voronoi_partido(354),
voronoi_partido(199),
voronoi_partido(97),
voronoi_partido(9),
voronoi_partido(60),
voronoi_partido(53),
voronoi_partido(52),
voronoi_partido(57),
voronoi_partido(50),
voronoi_partido(520),
voronoi_partido(461),
voronoi_partido(458),
voronoi_partido(450),
voronoi_partido(451),
voronoi_partido(449),
voronoi_partido(452),
voronoi_partido(439),
voronoi_partido(440),
voronoi_partido(350),
voronoi_partido(306),
voronoi_partido(273),
voronoi_partido(260),
voronoi_partido(205),
voronoi_partido(202),
voronoi_partido(191),
voronoi_partido(192),
voronoi_partido(200),
voronoi_partido(196),
voronoi_partido(197),
voronoi_partido(187),
voronoi_partido(309))
plot(voronis$geometry)
callesNA<-filter(calles_AMBA_urb, is.na(estado))
calles_definidas<-filter(calles_AMBA_urb, !is.na(estado)) %>%
mutate(ptje_pav=ifelse(estado=="pavimentada",1,0))
CallesAmbaUrbCorr<-callesNA %>%
st_intersection(select(voronis,ptje_pav))
CallesAmbaUrbCorr<-rbind(CallesAmbaUrbCorr,calles_definidas)
calles_radio<-st_intersection(CallesAmbaUrbCorr,radios)
radios_pav<-st_read("resumen_radio.geojson")
radios_pav[is.na(radios_pav)] <- 0
resumen<-group_by(as.data.frame(radios_pav), coddpto) %>%
summarise(long_tot=sum(long_tot), long_pav=sum(long_pav),long_no_pav=sum(long_tot-long_pav)) %>%
mutate(ptje_no_pav=long_no_pav/long_tot)
nom_depto<-as.data.frame(departamentos) %>%
mutate(coddpto= substr(in1,3,5)) %>%
select(coddpto, nam)
resumen<-left_join(resumen,nom_depto)
View(resumen)
View(resumen)
library(tidyverse)
library(jsonlite)
library(geojsonio)
library(lubridate)
library(sf)
library(janitor)
library(measurements)
library(units)
fecha<-"2021-07-01"
ruta_archivo<-(sprintf("/Users/Tomas/Documents/api_transporte/datos/%s/", fecha))
# GPS <- read_rds(sprintf("%sagrupado.rds",ruta_archivo))
GPS<-read_rds("/Users/Tomas/Documents/api_transporte/2021-07-01/agrupado.rds")
vias<- read_sf("/Users/Tomas/Google Drive/00 Trabajo/MOP/DPIT/shapes/Vial/Propuesta Primaria/RedPrimariaDisuelta.geojson ")
vias<-st_transform(vias,5348)   #llevamos a una proyeccion en metros
buffer<-filter(vias,red_RMBA=="primaria") %>%  #armamos los buffers
st_buffer(25) %>%
st_transform(4326)  #volvemos a la proyeccion anterior
#nos quedamos solamente con los puntos que estan dentro del buffer creado
gps_principales<-st_intersection(GPS,buffer)
GPS<-st_as_sf(GPS, coords = c("longitude", "latitude"), crs =4326 )
GPS<-mutate(GPS,fecha = as.POSIXct(timestamp, origin="1970-01-01")) #reinterpretamos la fecha y hora del timestamp
#nos quedamos solamente con los puntos que estan dentro del buffer creado
gps_principales<-st_intersection(GPS,buffer)
